package ${package.Service};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import com.elog.fs.admin.service.BaseService;
import com.elog.fs.admin.vo.GridDataModel;
import com.elog.fs.admin.vo.OmuiPage;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import javax.annotation.Resource;
import java.util.Map;
import java.util.List;
/**
 * <p>
 * $!{tablecomment} 服务类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
@Transactional
public class ${table.serviceName} extends BaseService<${entity}> {

    @Resource
    private ${table.mapperName} ${table.entityPath}Dao;


    public GridDataModel<${entity}> findByPage(Map<String, Object> searchParams, OmuiPage page){
        GridDataModel<${entity}> gm = new GridDataModel<${entity}>();
        PageRequest pageRequest = buildPageRequest(page);
        Specification<${entity}> spec = buildSpecification(searchParams);
        Page<${entity}> resultPage = ${table.entityPath}Dao.findAll(spec, pageRequest);
        gm.setTotal(resultPage.getTotalElements());
        gm.setRows(resultPage.getContent());
        return gm;
    }


    //cvs导出用
    public long count(Map<String, Object> searchParams){
        Specification<${entity}> spec = buildSpecification(searchParams);
        return ${table.entityPath}Dao.count(spec);
        }

    //cvs导出用
    public List<${entity}> queryList(Map<String, Object> searchParams, int start, int size){
        PageRequest pageRequest = buildPageRequest(start,size);
        Specification<${entity}> spec = buildSpecification(searchParams);
        Page<${entity}> resultPage = ${table.entityPath}Dao.findAll(spec, pageRequest);
        return resultPage.getContent();
    }


}

